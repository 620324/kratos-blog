# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Blog API
    version: 0.0.1
paths:
    /api/addBlog:
        post:
            tags:
                - Blog
            operationId: Blog_CreateBlog
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateBlogRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBlogReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/deleteBlog/{id}/{key}:
        delete:
            tags:
                - Blog
            operationId: Blog_DeleteBlog
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: key
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteBlogReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/getAllBlog:
        get:
            tags:
                - Blog
            operationId: Blog_ListBlog
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListBlogReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/getId/{id}:
        get:
            tags:
                - Blog
            operationId: Blog_GetBlogByID
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBlogIDReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/getTagName/{tag}:
        get:
            tags:
                - Blog
            operationId: Blog_GetBlogByTag
            parameters:
                - name: tag
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBlogReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/searchBlog/{title}:
        get:
            tags:
                - Blog
            operationId: Blog_GetBlogByTitle
            parameters:
                - name: title
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBlogByTitleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/updateAllBlogStatus/{status}:
        put:
            tags:
                - Blog
            operationId: Blog_UpdateAllCommentStatus
            parameters:
                - name: status
                  in: path
                  required: true
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateAllCommentStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateAllCommentStatusReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/updateAllow:
        put:
            tags:
                - Blog
            operationId: Blog_UpdateAllowComment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateAllowRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateAllowReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/updateAppear:
        put:
            tags:
                - Blog
            operationId: Blog_UpdateAppear
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateAllowRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateAllowReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/updateBlog/{id}:
        put:
            tags:
                - Blog
            operationId: Blog_UpdateBlog
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateBlogRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateBlogReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        BlogData:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                title:
                    type: string
                preface:
                    type: string
                photo:
                    type: string
                tag:
                    type: string
                createTime:
                    type: string
                updateTime:
                    type: string
                visits:
                    type: string
                content:
                    type: string
                appear:
                    type: boolean
                comment:
                    type: boolean
        CommonReply:
            type: object
            properties:
                code:
                    type: string
                result:
                    type: string
        CreateBlogReply:
            type: object
            properties:
                common:
                    $ref: '#/components/schemas/CommonReply'
        CreateBlogRequest:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/BlogData'
        DeleteBlogReply:
            type: object
            properties:
                common:
                    $ref: '#/components/schemas/CommonReply'
        GetBlogByTitleReply:
            type: object
            properties:
                common:
                    $ref: '#/components/schemas/CommonReply'
                data:
                    $ref: '#/components/schemas/BlogData'
        GetBlogIDReply:
            type: object
            properties:
                common:
                    $ref: '#/components/schemas/CommonReply'
                data:
                    $ref: '#/components/schemas/BlogData'
        GetBlogReply:
            type: object
            properties:
                common:
                    $ref: '#/components/schemas/CommonReply'
                List:
                    type: array
                    items:
                        $ref: '#/components/schemas/BlogData'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListBlogReply:
            type: object
            properties:
                common:
                    $ref: '#/components/schemas/CommonReply'
                List:
                    type: array
                    items:
                        $ref: '#/components/schemas/BlogData'
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateAllCommentStatusReply:
            type: object
            properties:
                common:
                    $ref: '#/components/schemas/CommonReply'
        UpdateAllCommentStatusRequest:
            type: object
            properties:
                status:
                    type: boolean
        UpdateAllowReply:
            type: object
            properties:
                common:
                    $ref: '#/components/schemas/CommonReply'
        UpdateAllowRequest:
            type: object
            properties: {}
        UpdateBlogReply:
            type: object
            properties:
                common:
                    $ref: '#/components/schemas/CommonReply'
        UpdateBlogRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                data:
                    $ref: '#/components/schemas/BlogData'
tags:
    - name: Blog
