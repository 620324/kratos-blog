# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Friend API
    version: 0.0.1
paths:
    /api/addFriend:
        post:
            tags:
                - Friend
            operationId: Friend_CreateFriend
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateFriendRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateFriendReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/deleteFriend/{id}:
        delete:
            tags:
                - Friend
            operationId: Friend_DeleteFriend
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteFriendReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/getAllFriend:
        get:
            tags:
                - Friend
            operationId: Friend_ListFriend
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListFriendReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/getFriend/{id}:
        get:
            tags:
                - Friend
            operationId: Friend_GetFriend
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetFriendReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/updateFriend:
        put:
            tags:
                - Friend
            operationId: Friend_UpdateFriend
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateFriendRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateFriendReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CommonReply:
            type: object
            properties:
                code:
                    type: string
                result:
                    type: string
        CreateFriendReply:
            type: object
            properties:
                common:
                    $ref: '#/components/schemas/CommonReply'
        CreateFriendRequest:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/FriendData'
        DeleteFriendReply:
            type: object
            properties:
                common:
                    $ref: '#/components/schemas/CommonReply'
        FriendData:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                preface:
                    type: string
                url:
                    type: string
                photo:
                    type: string
                date:
                    type: string
        GetFriendReply:
            type: object
            properties:
                common:
                    $ref: '#/components/schemas/CommonReply'
                data:
                    $ref: '#/components/schemas/FriendData'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListFriendReply:
            type: object
            properties:
                common:
                    $ref: '#/components/schemas/CommonReply'
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/FriendData'
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateFriendReply:
            type: object
            properties:
                common:
                    $ref: '#/components/schemas/CommonReply'
        UpdateFriendRequest:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/FriendData'
tags:
    - name: Friend
