// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (

	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"kratos-blog/app/comment/internal/biz"
	"kratos-blog/app/comment/internal/conf"
	"kratos-blog/app/comment/internal/data"
	"kratos-blog/app/comment/internal/server"
	"kratos-blog/app/comment/internal/service"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, confData *conf.Data,registry *conf.Registry, logger log.Logger) (*kratos.App, func(), error) {
	r := data.NewRegistrar(registry)
	db := data.NewDB(confData)
	rdb := data.NewRDB(confData)
	dataData, err := data.NewData(confData, logger,db,rdb)
	if err != nil {
		return nil, nil, err
	}
	commRepo := data.NewCommRepo(dataData, logger)
	commUsecase := biz.NewUCommUseCase(commRepo, logger)
	commService := service.NewCommentService(commUsecase)
	grpcServer := server.NewGRPCServer(confServer, commService, logger)
	httpServer := server.NewHTTPServer(confServer, commService, logger)
	app := newApp(logger, grpcServer, httpServer,r)
	return app, func() {
	}, nil
}
