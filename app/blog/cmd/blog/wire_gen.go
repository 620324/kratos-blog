// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (

	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"kratos-blog/app/blog/internal/biz"
	"kratos-blog/app/blog/internal/conf"
	"kratos-blog/app/blog/internal/data"
	"kratos-blog/app/blog/internal/server"
	"kratos-blog/app/blog/internal/service"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(conf *conf.Bootstrap,registry *conf.Registry,logger log.Logger) (*kratos.App, func(), error) {
	discovery := data.NewDiscovery(registry)
	userClient := data.NewGrpcServiceClient(conf.Service,discovery)
	r := data.NewRegistrar(registry)
	db := data.NewDB(conf.Data)
	rdb := data.NewRDB(conf.Data)
	dataData, err := data.NewData(conf.Data,logger,db,rdb,userClient)
	if err != nil {
		return nil, nil, err
	}
	blogRepo := data.NewBlogRepo(dataData, logger)
	blogUsecase := biz.NewBlogUseCase(blogRepo, logger)
	blogService := service.NewBlogService(blogUsecase)
	grpcServer := server.NewGRPCServer(conf.Server, blogService, logger)
	httpServer := server.NewHTTPServer(conf.Server, blogService, logger)
	app := newApp(logger, grpcServer, httpServer,r)
	return app, func() {
	}, nil
}
