// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"kratos-blog/app/gateway/internal/conf"
	"kratos-blog/app/gateway/internal/data"
	"kratos-blog/app/gateway/internal/server"
	"kratos-blog/app/gateway/internal/service"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confData *conf.Bootstrap,registry *conf.Registry, logger log.Logger) (*kratos.App, func(), error) {
	r := data.NewRegistrar(registry)
	discovery := data.NewDiscovery(registry)
	userClient := data.NewUserServiceClient(discovery)
	userService := service.NewUserService(logger,userClient)
	commentClient := data.NewCommentServiceClient(discovery)
	commentService := service.NewCommentService(logger,commentClient)
	blogClient := data.NewBlogServiceClient(discovery)
	blogService := service.NewBlogService(logger,blogClient)
	tagClient := data.NewTagServiceClient(discovery)
	tagService := service.NewTagService(logger,tagClient)
	friendClient := data.NewFriendServiceClient(discovery)
	friendService := service.NewFriendService(friendClient,logger)
	httpServer := server.NewHTTPServer(confData	, logger,userService,commentService,blogService,tagService,friendService)
	app := newApp(logger, httpServer,r)
	return app, func() {
	}, nil
}
